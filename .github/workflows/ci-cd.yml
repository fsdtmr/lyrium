name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test --no-pub --coverage

      - name: Check if version changed
        id: check_version
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git fetch origin main --depth=2
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          if echo "$CHANGED_FILES" | grep -q "pubspec.yaml"; then
            VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)
            echo "version=$VERSION" >> "$GITHUB_OUTPUT"
            echo "version_changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "version_changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Build release APK
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: flutter build apk --release

      - name: Create Git tag
        if: steps.check_version.outputs.version_changed == 'true'
        run: |
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git tag -a "v${{ steps.check_version.outputs.version }}" -m "Release v${{ steps.check_version.outputs.version }}"
          git push origin "v${{ steps.check_version.outputs.version }}"

      - name: Create GitHub Release
        if: steps.check_version.outputs.version_changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.check_version.outputs.version }}
          name: Release v${{ steps.check_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            build/app/outputs/flutter-apk/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
